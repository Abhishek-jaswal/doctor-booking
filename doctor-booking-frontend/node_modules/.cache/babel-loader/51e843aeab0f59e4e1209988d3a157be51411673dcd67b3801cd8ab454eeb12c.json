{"ast":null,"code":"var _jsxFileName = \"/home/aarivtmk/abhishek/doctor-booking/doctor-booking-frontend/src/pages/SlotPicker.js\",\n  _s = $RefreshSig$();\n// src/pages/SlotPicker.js\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlotPicker({\n  doctorId,\n  onBack\n}) {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [locked, setLocked] = useState(false);\n  useEffect(() => {\n    if (doctorId) {\n      api.get(`/doctors/${doctorId}/slots`).then(res => setSlots(res.data)).catch(err => console.error(\"Error fetching slots\", err));\n    }\n  }, [doctorId]);\n  function handleLock(slotId) {\n    api.post(\"/appointments/lock-slot\", {\n      slotId\n    }).then(() => {\n      setSelectedSlot(slotId);\n      setLocked(true);\n      alert(\"Slot locked for 5 minutes. Please confirm booking.\");\n    }).catch(() => alert(\"Slot unavailable\"));\n  }\n  function handleConfirm() {\n    // For testing: hardcode patientId=2 (must exist in DB)\n    api.post(\"/appointments/confirm\", {\n      patientId: 2,\n      doctorId,\n      slotId: selectedSlot\n    }).then(() => alert(\"Booking confirmed!\")).catch(() => alert(\"Booking failed\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"\\u2B05 Back to Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(slot.start_time).toLocaleString(), \" - \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLock(slot.id),\n          children: \"Lock Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, slot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), locked && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      onClick: handleConfirm,\n      children: \"Confirm Booking (Mock OTP)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SlotPicker, \"Uo4DKdI4cdpKu7ACKXNsK0N/SUo=\");\n_c = SlotPicker;\nexport default SlotPicker;\nvar _c;\n$RefreshReg$(_c, \"SlotPicker\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","SlotPicker","doctorId","onBack","_s","slots","setSlots","selectedSlot","setSelectedSlot","locked","setLocked","get","then","res","data","catch","err","console","error","handleLock","slotId","post","alert","handleConfirm","patientId","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","Date","start_time","toLocaleString","id","style","marginTop","_c","$RefreshReg$"],"sources":["/home/aarivtmk/abhishek/doctor-booking/doctor-booking-frontend/src/pages/SlotPicker.js"],"sourcesContent":["// src/pages/SlotPicker.js\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\n\nfunction SlotPicker({ doctorId, onBack }) {\n  const [slots, setSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [locked, setLocked] = useState(false);\n\n  useEffect(() => {\n    if (doctorId) {\n      api\n        .get(`/doctors/${doctorId}/slots`)\n        .then((res) => setSlots(res.data))\n        .catch((err) => console.error(\"Error fetching slots\", err));\n    }\n  }, [doctorId]);\n\n  function handleLock(slotId) {\n    api\n      .post(\"/appointments/lock-slot\", { slotId })\n      .then(() => {\n        setSelectedSlot(slotId);\n        setLocked(true);\n        alert(\"Slot locked for 5 minutes. Please confirm booking.\");\n      })\n      .catch(() => alert(\"Slot unavailable\"));\n  }\n\n  function handleConfirm() {\n    // For testing: hardcode patientId=2 (must exist in DB)\n    api\n      .post(\"/appointments/confirm\", {\n        patientId: 2,\n        doctorId,\n        slotId: selectedSlot,\n      })\n      .then(() => alert(\"Booking confirmed!\"))\n      .catch(() => alert(\"Booking failed\"));\n  }\n\n  return (\n    <div>\n      <button onClick={onBack}>â¬… Back to Doctors</button>\n      <h2>Available Slots</h2>\n      <ul>\n        {slots.map((slot) => (\n          <li key={slot.id}>\n            {new Date(slot.start_time).toLocaleString()}\n            {\" - \"}\n            <button onClick={() => handleLock(slot.id)}>Lock Slot</button>\n          </li>\n        ))}\n      </ul>\n\n      {locked && (\n        <button style={{ marginTop: \"10px\" }} onClick={handleConfirm}>\n          Confirm Booking (Mock OTP)\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default SlotPicker;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,EAAE;MACZJ,GAAG,CACAa,GAAG,CAAC,YAAYT,QAAQ,QAAQ,CAAC,CACjCU,IAAI,CAAEC,GAAG,IAAKP,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,SAASiB,UAAUA,CAACC,MAAM,EAAE;IAC1BtB,GAAG,CACAuB,IAAI,CAAC,yBAAyB,EAAE;MAAED;IAAO,CAAC,CAAC,CAC3CR,IAAI,CAAC,MAAM;MACVJ,eAAe,CAACY,MAAM,CAAC;MACvBV,SAAS,CAAC,IAAI,CAAC;MACfY,KAAK,CAAC,oDAAoD,CAAC;IAC7D,CAAC,CAAC,CACDP,KAAK,CAAC,MAAMO,KAAK,CAAC,kBAAkB,CAAC,CAAC;EAC3C;EAEA,SAASC,aAAaA,CAAA,EAAG;IACvB;IACAzB,GAAG,CACAuB,IAAI,CAAC,uBAAuB,EAAE;MAC7BG,SAAS,EAAE,CAAC;MACZtB,QAAQ;MACRkB,MAAM,EAAEb;IACV,CAAC,CAAC,CACDK,IAAI,CAAC,MAAMU,KAAK,CAAC,oBAAoB,CAAC,CAAC,CACvCP,KAAK,CAAC,MAAMO,KAAK,CAAC,gBAAgB,CAAC,CAAC;EACzC;EAEA,oBACEtB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQ0B,OAAO,EAAEvB,MAAO;MAAAsB,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD9B,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB9B,OAAA;MAAAyB,QAAA,EACGpB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBACdhC,OAAA;QAAAyB,QAAA,GACG,IAAIQ,IAAI,CAACD,IAAI,CAACE,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC,EAC1C,KAAK,eACNnC,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAACa,IAAI,CAACI,EAAE,CAAE;UAAAX,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHvDE,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJrB,MAAM,iBACLT,OAAA;MAAQqC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAACZ,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAAC;IAE9D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA1DQH,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA4DnB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}